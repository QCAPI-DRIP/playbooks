---
- hosts: master
  vars:
    k8s_state: present
    service_name: "{{ lookup('env','DOCKER_SERVICE_NAME') }}"
    container_port: "{{ lookup('env','CONTAINER_PORT')}}"
    docker_image:  "{{ lookup('env','DOCKER_IMAGE')}}"
    namespace:  "{{ lookup('env','K8s_NAMESPACE')}}"
    ansible_python_interpreter: /usr/bin/python3    
  tasks:

    - name: print service_name
      debug:
        var: "{{service_name}}"
        
    - name: print container_port
      debug:
        var: "{{container_port}}"      
        
    - name: print docker_image
      debug:
        var: "{{docker_image}}"                       
       
    - pip:
        name:
            - openshift==0.11.0
            - kubernetes==11.0.0
            
            
    - name: Create a k8s namespace
      k8s:
        name: application
        api_version: v1
        kind: Namespace
        state: present            

    - name: Create deployment
      k8s:
        state: "{{k8s_state}}"
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            namespace: application
            annotations:
            labels:
              service: ws-pema
            name: ws-pema
          spec:
            selector:
              matchLabels:
                service: ws-pema
            replicas: 1
            template:
              metadata:
                labels:
                  service: ws-pema
              spec:
                containers:
                - image: alogo53/ws-pema-lifewatch
                  name: ws-pema
                  imagePullPolicy: Always
                  ports:
                  - containerPort: 8080


    - name: Create service
      k8s:
        state: "{{k8s_state}}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            namespace: application
            labels:
              service: ws-pema
            name: ws-pema
          spec:
            type: NodePort  
            ports:
            - port: 8080
              protocol: TCP
              name: http
            selector:
              service: ws-pema

