---
- hosts: master
  vars:
    k8s_state: present
    service_name: lookup('env','DOCKER_SERVICE_NAME')
    container_port: lookup('env','CONTAINER_PORT')
    docker_image:  lookup('env','DOCKER_IMAGE')
    namespace:  application
    ansible_python_interpreter: /usr/bin/python3    
  tasks:

    - name: print service_name
      debug:
        var: "{{service_name}}"
        
    - name: print container_port
      debug:
        var: "{{container_port}}"      
        
    - name: print docker_image
      debug:
        var: "{{docker_image}}"                       
       
    - pip:
        name:
            - openshift==0.11.0
            - kubernetes==11.0.0
            
            
    - name: Create a k8s namespace
      k8s:
        name: confAppication
        api_version: v1
        kind: Namespace
        state: present            

    - name: Create deployment
      k8s:
        state: "{{k8s_state}}"
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            namespace: confAppication
            labels:
              service: "{{service_name}}"
            name: "{{service_name}}"
          spec:
            selector:
              matchLabels:
                service: "{{service_name}}"
            replicas: 1
            strategy:
              type: Recreate
            template:
              metadata:
                labels:
                  service: "{{service_name}}"
              spec:
                containers:
                  image: "{{docker_image}}"
                  name: "{{service_name}}"
                  ports:
                  - containerPort: "{{container_port}}"

    - name: Create service
      k8s:
        state: "{{k8s_state}}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            namespace: confAppication
            labels:
              service: "{{service_name}}"
            name: "{{service_name}}"
          spec:
            type: NodePort
            ports:
            - port: "{{container_port}}"
              protocol: TCP
              name: "{{container_port}}"
            selector:
              service: "{{service_name}}"
