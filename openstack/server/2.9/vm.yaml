- stat:
    path: /tmp/os_server_output{{ project_id }}.json
  register: stat_result

- file:
    path: /tmp/os_server_output{{ project_id }}.json
    state: absent
  when: stat_result.stat.exists

- os_server:
    state: "{{ state }}"
    name: "{{ name }}"
    image: "{{ image }}"
    key_name: "{{ key_name }}"
    flavor: "{{ flavor }}"
    network: "{{ network }}"
    timeout: 300
  environment:
    OS_AUTH_URL: "{{ auth_url }}"
    OS_ACCESS_TOKEN: "{{ access_token }}"
    OS_PROJECT_ID: "{{ project_id }}"
    OS_AUTH_TYPE: v3oidcaccesstoken
    OS_IDENTITY_PROVIDER: "{{ identity_provider }}"
    OS_PROTOCOL: "{{ protocol }}"
  register: os_server_output

- local_action: copy content={{ os_server_output }} dest=/tmp/os_server_output{{ project_id }}.json

- shell: jq '.openstack | {"compute":{"accessIPv4"}}' /tmp/os_server_output{{ project_id }}.json
  register: vm_ip

- set_stats:
    data:
      vm: "{{ vm_ip.stdout }}"
  register: os_server_output